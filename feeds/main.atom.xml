<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>bysputnikus</title><link href="https://sputnikus.github.io/" rel="alternate"></link><link href="https://sputnikus.github.io/feeds/main.atom.xml" rel="self"></link><id>https://sputnikus.github.io/</id><updated>2014-07-28T00:00:00+02:00</updated><entry><title>Information fasting</title><link href="https://sputnikus.github.io/info_fast1" rel="alternate"></link><updated>2014-07-28T00:00:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2014-07-28:info_fast1</id><summary type="html">&lt;p&gt;Information diet was tempting me recently. With all the social sites and blogs, it&amp;#8217;s kinda hard to switch back into creation mode, get brain juices flowing. That&amp;#8217;s why I started to prepare &amp;#8220;The&amp;nbsp;Plan&amp;#8221;.&lt;/p&gt;
&lt;h2 id="cut-of-distractions"&gt;Cut of&amp;nbsp;distractions&lt;/h2&gt;
&lt;p&gt;There&amp;#8217;s a lot of information out there about a topic of information diet, for example books like &lt;em&gt;The Information Diet: A Case for Conscious Consumption&lt;/em&gt; (&lt;a href="http://www.amazon.com/gp/product/1449304680/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1449304680&amp;amp;linkCode=as2&amp;amp;tag=bysputnikus-20&amp;amp;linkId=BCAW25KTBPEOZ7WV"&gt;Amazon&lt;/a&gt;) or &lt;em&gt;The 4-Hour Workweek: Escape 9-5, Live Anywhere, and Join the New Rich&lt;/em&gt; (&lt;a href="http://www.amazon.com/gp/product/0307465357/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0307465357&amp;amp;linkCode=as2&amp;amp;tag=bysputnikus-20&amp;amp;linkId=43BTGK2TAIY43NIY"&gt;Amazon&lt;/a&gt;). Solid foundation to build on. I&amp;#8217;m going to lay my version of do&amp;#8217;s and don&amp;#8217;ts. What should I&amp;nbsp;avoid:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Social sites (Facebook, Twitter, Reddit, Hacker News, YouTube, Tumblr,&amp;nbsp;etc.)&lt;/li&gt;
&lt;li&gt;Blogs with news and opinions on&amp;nbsp;them&lt;/li&gt;
&lt;li&gt;Newspapers and news&amp;nbsp;servers&lt;/li&gt;
&lt;li&gt;Feedly (&lt;span class="caps"&gt;RSS&lt;/span&gt;) &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;Instapaper&lt;/li&gt;
&lt;li&gt;Nonfiction&amp;nbsp;books&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not that harsh. I don&amp;#8217;t own a &lt;span class="caps"&gt;TV&lt;/span&gt; (or radio), so it&amp;#8217;s not a problem, also I&amp;#8217;m not checking email much (but I&amp;#8217;m going to cut it to only once a&amp;nbsp;day). &lt;/p&gt;
&lt;h2 id="encourage-good"&gt;Encourage&amp;nbsp;good&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;m all for channels which turn on my brain and provoke it to think. What is allowed (in moderate&amp;nbsp;amounts):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.dropboxusercontent.com/u/15576011/podcasts.opml"&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fiction&amp;nbsp;books&lt;/li&gt;
&lt;li&gt;Entertaining&amp;nbsp;movies&lt;/li&gt;
&lt;li&gt;Music&lt;/li&gt;
&lt;li&gt;Tutorial&amp;nbsp;blogs&lt;/li&gt;
&lt;li&gt;Documentation of any sort (software, cooking,&amp;nbsp;etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="expectations"&gt;Expectations&lt;/h2&gt;
&lt;p&gt;I don&amp;#8217;t think next week will have big effect on my &lt;a href="https://sputnikus.github.io/daily_routine"&gt;routine&lt;/a&gt;, but hopes are for a better usage of my free time (tackle project idea, learn something new, polish old knowledge) and maybe less temptations to check some sites while working. I&amp;#8217;m looking forward to just scratch some sites from my reading list, clean up some &lt;span class="caps"&gt;RSS&lt;/span&gt; subscriptions and Instapaper queue. I&amp;#8217;m starting today (2014-07-28), so I&amp;#8217;ll put together some form of summary post next&amp;nbsp;week.&lt;/p&gt;</summary><category term="time"></category><category term="routine"></category><category term="information"></category><category term="diet"></category></entry><entry><title>Daily routine of lazy hacker</title><link href="https://sputnikus.github.io/daily_routine" rel="alternate"></link><updated>2014-07-15T00:00:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2014-07-15:daily_routine</id><summary type="html">&lt;p&gt;&lt;em&gt;Post is my answer for Danger &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Play &lt;a href="http://www.dangerandplay.com/2014/07/05/daily-routine/"&gt;question&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mike&amp;#8217;s post is not a first that I&amp;#8217;ve read on this topic - the rest of the Internet talks about it too (&lt;a href="http://jamesclear.com/daily-routines-writers"&gt;James&lt;/a&gt; &lt;a href="http://jamesclear.com/25000-mornings"&gt;Clear&lt;/a&gt;, &lt;a href="http://blog.bufferapp.com/the-daily-routines-of-famous-entrepreneurs-and-how-to-design-your-own-master-routine"&gt;Buffer&lt;/a&gt;) and there&amp;#8217;s also a famous &lt;a href="http://www.amazon.com/gp/product/081298160X/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=081298160X&amp;amp;linkCode=as2&amp;amp;tag=bysputnikus-20&amp;amp;linkId=7BOIJTMO5YS3NFOW" title="The Power of Habit - Amazon affiliate"&gt;book&lt;/a&gt;. As you can see, a lot of people just puts their work time to autopilot. But a lot of people will tell you, that doing this you are sacrificing your creativity. I don&amp;#8217;t think that&amp;#8217;s the case. Here&amp;#8217;s my daily schedule and some core&amp;nbsp;principles.&lt;/p&gt;
&lt;h2 id="from-waking-up-to-lunch"&gt;From waking up to&amp;nbsp;lunch&lt;/h2&gt;
&lt;p&gt;Rise and shine around 6 a.m., drink lightly salted water and make myself a cup of &lt;a href="https://sputnikus.github.io/coffee_and_beyond"&gt;bulletproof&lt;/a&gt; coffee. At my standing desk, tune in some &lt;a href="https://dl.dropboxusercontent.com/u/15576011/podcasts.opml"&gt;podcast episode&lt;/a&gt;/&lt;a href="http://www.di.fm/"&gt;di.fm&lt;/a&gt;/&lt;a href="https://play.google.com/music/listen"&gt;music&lt;/a&gt; and work. I chop work time into 90 - 120 minute blocks with 2 breaks (around 30 minutes each), using them to hygiene and make some coffee or working out (exercise minimalist). After 3 of those chunks I&amp;#8217;m usually done, which means 4.5 - 6 hours of focused time per day (of usually client work). Then it&amp;#8217;s time for earned breakfast (or shopping for it), 99% consists of eggs and some meat (bacon or&amp;nbsp;fish).&lt;/p&gt;
&lt;h2 id="rest-of-the-day"&gt;Rest of the&amp;nbsp;day&lt;/h2&gt;
&lt;p&gt;Satisfied with my work and food, time has come to meditation (at least for 5 minutes), then go out (get some vitamin D or at least some fresh air). I often end up sitting in café (like &lt;a href="https://www.facebook.com/pages/COFFEE-FUSION/209200889117261"&gt;Fusion&lt;/a&gt;, owned by Czech Barista champion of 2014), sipping on some premium gourmet shit. Return home for some dinner (or eat out if I want a good burger/india/etc.). After that I either go to grab drink or two with friends, read (books, blogs), work on some personal stuff or just play computer games. I finish my day by taking supplements, writing diary and cold&amp;nbsp;shower.&lt;/p&gt;
&lt;h2 id="core-principles"&gt;Core&amp;nbsp;principles&lt;/h2&gt;
&lt;p&gt;Take a look at &lt;a href="https://en.wikipedia.org/wiki/Pareto_principle"&gt;Pareto principle&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Parkinson_Law"&gt;Parkinson&amp;#8217;s law&lt;/a&gt;. First is universally applicable on all parts of life (but maybe not in popular 80/20 ratio), second is just about the power of strict deadlines. When at home, I often work while &lt;a href="http://iamnotaprogrammer.com/Ikea-Standing-desk-for-22-dollars.html"&gt;standing&lt;/a&gt;, which gives me that freedom to just leave (also great for your posture). When it comes to tooling, after years of testing bunch of apps, I&amp;#8217;m now using &lt;a href="https://www.rescuetime.com/ref/598820" title="RescueTime referral"&gt;RescueTime&lt;/a&gt; for time counting and &lt;a href="https://trello.com/martinputniorz/recommend" title="Trello recommend link"&gt;Trello&lt;/a&gt; for task tracking, sometimes combined with &lt;a href="https://play.google.com/store/apps/details?id=org.ilumbo.ovo"&gt;Ovo&lt;/a&gt; (when I need to kick my ass to produce&amp;nbsp;work).&lt;/p&gt;
&lt;h2 id="right-mindset"&gt;Right&amp;nbsp;mindset&lt;/h2&gt;
&lt;p&gt;To wrap this up, some thoughts. Don&amp;#8217;t panic, when your routines get screwed up, because it happens. Try to be &lt;a href="https://sputnikus.github.io/stoic_zen"&gt;stoic&lt;/a&gt; about it and get back on track. Good routine is a product of long run and continuous tinkering. Apply your principles on it, teach people about it and optimize. Because it&amp;#8217;s never ending&amp;nbsp;process.&lt;/p&gt;</summary><category term="time"></category><category term="routine"></category></entry><entry><title>Better Google Group scraper</title><link href="https://sputnikus.github.io/google_groups_scrape_again" rel="alternate"></link><updated>2014-06-27T00:00:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2014-06-27:google_groups_scrape_again</id><summary type="html">&lt;p&gt;In &lt;a href="https://sputnikus.github.io/google_groups_scrape"&gt;previous article&lt;/a&gt; about Google Group scraping I&amp;#8217;ve demonstrated very minimal script to get basic informations about group threads. It turns out class based approach doesn&amp;#8217;t work so well, because JavaScript frontend of Groups is not consistent in class naming. I fixed my scripts and now I&amp;#8217;m going to show you, what I&amp;#8217;ve&amp;nbsp;changed.&lt;/p&gt;
&lt;h2 id="third-try"&gt;Third&amp;nbsp;try&lt;/h2&gt;
&lt;p&gt;Since we can&amp;#8217;t use classes for XPath, we need to search for another leads. Luckily for us, every thread is wrapped in &lt;code&gt;div&lt;/code&gt; with &lt;code&gt;role="listitem"&lt;/code&gt; attribute. So after this little change, our thread extractor looks like&amp;nbsp;this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lmxl&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fromstring&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PhantomJS&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_window_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;page_source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_links_absolute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GOOGLE_GROUP_BASE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html_threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;//div[@role=&amp;quot;listitem&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread_to_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;html_threads&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="serialization-almost-classless"&gt;Serialization (almost&amp;nbsp;classless)&lt;/h2&gt;
&lt;p&gt;Even serialization script relied heavily on classes. Inside the &lt;code&gt;listitem&lt;/code&gt; are no anchors to use, so we are a little bit blind this&amp;nbsp;time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;thread_to_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;raw_last_change&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//span[@title]&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;last_change&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date_parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_last_change&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;last_change&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;
    &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//div[contains(@style,&amp;quot;right&amp;quot;)]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;seen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//span[@class]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//span[@class]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parsed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First link in the thread contains name and of course address. Then we search for &lt;code&gt;span&lt;/code&gt; with &lt;code&gt;title&lt;/code&gt; attribute. That&amp;#8217;s a time of the last change. Thread information are in the &lt;code&gt;div&lt;/code&gt; with &lt;code&gt;style: right Xpx&lt;/code&gt;, where X changes (it&amp;#8217;s even inconsistent on the single page). First and second &lt;code&gt;span&lt;/code&gt; elements in the information line are author and something, I&amp;#8217;m going after the post and seen&amp;nbsp;counts.&lt;/p&gt;
&lt;h2 id="beyond-scraping"&gt;Beyond&amp;nbsp;scraping&lt;/h2&gt;
&lt;p&gt;Google kind of got me there, so now the unofficial Groups &lt;span class="caps"&gt;API&lt;/span&gt; sounds like a really good idea. Reverse engineering JavaScript &lt;span class="caps"&gt;API&lt;/span&gt; could be pain in the ass, but for read/write purposes it would be awesome thing to&amp;nbsp;have. &lt;/p&gt;</summary><category term="scraping"></category><category term="python"></category></entry><entry><title>Better coffee habits and beyond</title><link href="https://sputnikus.github.io/coffee_and_beyond" rel="alternate"></link><updated>2014-06-18T00:00:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2014-06-18:coffee_and_beyond</id><summary type="html">&lt;p&gt;Last week I was watching the World Barista Championship (for some amazing performances, watch at least &lt;a href="http://new.livestream.com/worldcoffee/events/3076857"&gt;finals&lt;/a&gt;). And in this procrastination mood, two articles about coffee got my attention: one from &lt;a href="http://blog.lift.do/break-bad-coffee-habits/"&gt;Lift.do blog&lt;/a&gt; and the other from &lt;a href="http://authoritynutrition.com/3-reasons-why-bulletproof-coffee-is-a-bad-idea/"&gt;Authority Nutrition&lt;/a&gt;. Don&amp;#8217;t get me wrong, both are fairly good and from sources I like, but something doesn&amp;#8217;t add up in them (at least for me). &lt;em&gt;Warning: following paragraphs contain some caffeinated&amp;nbsp;opinions.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="break-bad-coffee-habits-like-drinking-too-little-of-it"&gt;Break Bad Coffee Habits (like drinking too little of&amp;nbsp;it)&lt;/h2&gt;
&lt;p&gt;Well, I&amp;#8217;m all for cutting out sugar (you don&amp;#8217;t need it with quality coffee). not drinking coffee before sleep and not using those flavoured creamers (again, invest in good beans). But 1-2 cups per day ain&amp;#8217;t gonna cut it. &lt;a href="http://www.bulletproofexec.com/"&gt;Dave Asprey&lt;/a&gt; is propagating coffee as superfood and you take 2 cups max? Kris Gunnars wrote &lt;a href="http://authoritynutrition.com/6-graphs-that-convince-you-to-drink-more-coffee/"&gt;persuasive article&lt;/a&gt; on this with some hard scientific data (and graphs!). Coffee is very beneficial for your health and it&amp;#8217;s not a villain here, the junk you put into it&amp;nbsp;is.&lt;/p&gt;
&lt;h2 id="why-bulletproof-coffee-is-a-good-idea"&gt;Why Bulletproof Coffee is a Good&amp;nbsp;Idea&lt;/h2&gt;
&lt;p&gt;Kris&amp;#8217; take on &lt;a href="http://www.bulletproofexec.com/how-to-make-your-coffee-bulletproof-and-your-morning-too/"&gt;bulletproof coffee&lt;/a&gt; is a little bit tricky. While I agree that high-carb dieters shouldn&amp;#8217;t try this stuff and it&amp;#8217;s not really about replacing breakfast, let&amp;#8217;s see my way of doing bulletproof. I normally don&amp;#8217;t do any breakfast (it makes me more dizzy), but I was searching for some energy kick after waking up. Bulletproof coffee is then very suitable for me - it brings stimulant &lt;strong&gt;and&lt;/strong&gt; long-lasting fuel. I don&amp;#8217;t think refined and processed &lt;a href="https://en.wikipedia.org/wiki/Medium-chain_triglyceride"&gt;&lt;span class="caps"&gt;MCT&lt;/span&gt; oil&lt;/a&gt; is really bad (the fact is it&amp;#8217;s not paleo). I&amp;#8217;ve tried to use extra virgin coconut oil, but effect on the taste was really bad and the energy boost was much lower. If you want to try bulletproof, get on some form of low-carb diet first, because it really can mess up your &lt;span class="caps"&gt;LDL&lt;/span&gt; and triglycerides. But for me, bulletproof is a good way to function with (nearly) empty&amp;nbsp;stomach.&lt;/p&gt;
&lt;h2 id="its-all-about-dietary-habits"&gt;It&amp;#8217;s all about dietary&amp;nbsp;habits&lt;/h2&gt;
&lt;p&gt;Yeah, if your eating habits are bad, no amount of coffee (bulletproof or not) is going to save you. But if you are following some form of high-fat/low-carb protocol, a cup of bulletproof is not going to kill you and it can be beneficial. Some people need &lt;a href="http://youtu.be/1yWXLJF_Ju8"&gt;protein for breakfast&lt;/a&gt; and they should get it. But if they want some coffee with it, why not bulletproof? So as I said, if you are low-carb, give bulletproof a shot instead of breakfast and eat a big lunch. You can then decide what&amp;#8217;s good for&amp;nbsp;you.&lt;/p&gt;</summary><category term="coffee"></category><category term="diet"></category><category term="bulletproof"></category></entry><entry><title>How to scrape Google Groups</title><link href="https://sputnikus.github.io/google_groups_scrape" rel="alternate"></link><updated>2014-06-13T00:00:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2014-06-13:google_groups_scrape</id><summary type="html">&lt;p&gt;Recently I wanted to get some data out of our &lt;a href="https://groups.google.com/forum/#!forum/django-cs"&gt;django-cs&lt;/a&gt; group&amp;#8217;s front page (specificaly last month threads). But you know Google - if they have an &lt;span class="caps"&gt;API&lt;/span&gt; to something, it&amp;#8217;s often barely usable. It turned out Groups &lt;span class="caps"&gt;API&lt;/span&gt; exist. But only if you are using Google Groups in paid Google Apps, which is not my case. Time to bring out the power&amp;nbsp;tools.&lt;/p&gt;
&lt;h2 id="first-try"&gt;First&amp;nbsp;try&lt;/h2&gt;
&lt;p&gt;Classic, kind of conservative approach, is to use library like BeautifulSoup or lxml, load the &lt;span class="caps"&gt;HTML&lt;/span&gt;, serialize values and get&amp;nbsp;out. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lxml.html&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parse&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;GOOGLE_GROUP_BASE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://groups.google.com/forum/&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;GOOGLE_GROUP_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GOOGLE_GROUP_BASE&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;#!forum/{}&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;group_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GOOGLE_GROUP_URL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;django-cs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getroot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_links_absolute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GOOGLE_GROUP_BASE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html_threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;//div[@class=&amp;quot;GIEUOX-DEQ&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread_to_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;html_threads&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, nothing out of ordinary. I&amp;#8217;m using lmxl just because I like it more than BeautifulSoup&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. Also notice the very spot-on class name of for thread &lt;code&gt;div&lt;/code&gt;. Serialization function &lt;code&gt;thread_to_dict&lt;/code&gt; will be explained in a moment. Now what do you think &lt;code&gt;threads&lt;/code&gt; generator is going to yield? The answer is nothing. Why? Because of &lt;span class="caps"&gt;JS&lt;/span&gt;&amp;nbsp;rendering. &lt;/p&gt;
&lt;h2 id="second-try"&gt;Second&amp;nbsp;try&lt;/h2&gt;
&lt;p&gt;If page is &lt;span class="caps"&gt;JS&lt;/span&gt; rendered, the best way is obviously to let it render in browser. Here comes project &lt;a href="http://docs.seleniumhq.org/"&gt;selenium&lt;/a&gt;, which is mostly used for automated frontend testing and comes with couple of what they call webdrivers. You can choose between Chrome, Firefox or PhantomJS. I&amp;#8217;ve chosen PhantomJS, because it&amp;#8217;s designed to run headless and quite speedy. Only problem is that you have to install it &lt;a href="http://phantomjs.org/download.html"&gt;separately&lt;/a&gt;. So, let&amp;#8217;s try&amp;nbsp;again.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lmxl&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fromstring&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PhantomJS&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_window_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;page_source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_links_absolute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GOOGLE_GROUP_BASE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html_threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;frontpage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;//div[@class=&amp;quot;GIEUOX-DEQ&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread_to_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;html_threads&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A little bit more code but nothing dramatic. &lt;code&gt;browser&lt;/code&gt; contains initialized PhantomJS instance with specified window site (this is usable when site is doing redirect to mobile version). We get the &lt;span class="caps"&gt;URL&lt;/span&gt; and then we pause&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; for 5 seconds (random integer between 4 and 6). After that it&amp;#8217;s basically same (don&amp;#8217;t forget to close &lt;code&gt;browser&lt;/code&gt;). Generator now yields desired&amp;nbsp;dicts.&lt;/p&gt;
&lt;h2 id="serialization"&gt;Serialization&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;thread_to_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//a[@class=&amp;quot;GIEUOX-DPL&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//a[@class=&amp;quot;GIEUOX-DPL&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;raw_last_change&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//span[@class=&amp;quot;GIEUOX-DOQ&amp;quot;]/span&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;last_change&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date_parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_last_change&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;last_change&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;
    &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.//span[@class=&amp;quot;GIEUOX-DOQ&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;seen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parsed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For getting those crazy classes, browser developer tools are your friends. Date parsing is a bit pain in the ass. Either you can get &lt;em&gt;day. short_month&lt;/em&gt; format or some full hybrid in &lt;code&gt;title&lt;/code&gt; that with my Czech locale yielded something like &lt;code&gt;středa, 11. června 2014 17:57:36 UTC+2&lt;/code&gt; (this is &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;strptime %c&lt;/code&gt; format!) so I just wrote a simple date parser for it. Info part is later used for thread&amp;nbsp;scoring.&lt;/p&gt;
&lt;h2 id="no-animals-harmed"&gt;No animals&amp;nbsp;harmed&lt;/h2&gt;
&lt;p&gt;As you can see, even without the official &lt;span class="caps"&gt;API&lt;/span&gt;, getting some basic data from Google is pretty straightforward. If you want to see the full source code, head to the &lt;a href="https://github.com/sputnikus/newschimp/blob/master/social/gg.py"&gt;newschimp&lt;/a&gt; project. Pull requests are welcome. Also, unofficial Groups &lt;span class="caps"&gt;API&lt;/span&gt; is a great&amp;nbsp;idea.&lt;/p&gt;
&lt;h3 id="update"&gt;Update&lt;/h3&gt;
&lt;p&gt;This class based approach works only until Google changes client rendering (it&amp;#8217;s a short term solution). For better scraper, see my &lt;a href="https://sputnikus.github.io/google_groups_scrape_again"&gt;article&lt;/a&gt; with third try on&amp;nbsp;this. &lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;They are both really useful, I just enjoy using lxml more. Ian Bicking &lt;a href="http://www.ianbicking.org/blog/2008/12/lxml-an-underappreciated-web-scraping-library.html"&gt;sumed it&lt;/a&gt; nicely.  &amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;&lt;span class="caps"&gt;JS&lt;/span&gt; needs some time to render (when scraping Google Groups, the longer you sleep the more threads are going to render)&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="scraping"></category><category term="python"></category></entry><entry><title>Stoicism with Zen tools</title><link href="https://sputnikus.github.io/stoic_zen" rel="alternate"></link><updated>2014-06-03T00:00:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2014-06-03:stoic_zen</id><summary type="html">&lt;p&gt;After years of fascination by east philosophy, I&amp;#8217;ve found much more suiting way of thinking about life closer, namely in ancient Greece and Rome. Stoic texts have much more impact on me than anything from Zen authors. There&amp;#8217;s a lot of misunderstanding of what Stoicism really means and I&amp;#8217;m not going to describe it today (but it&amp;#8217;s most certainly on my &lt;em&gt;to write&lt;/em&gt; Trello board). Instead I try to describe, what I&amp;#8217;ve taken from Zen philosophy that&amp;#8217;s helping me in day to day&amp;nbsp;Stoicism.&lt;/p&gt;
&lt;h2 id="meditation"&gt;Meditation&lt;/h2&gt;
&lt;p&gt;Rise and shine. Yes, Iusually meditate on the morning (right after finishing a huge soup mug of bulletproof coffee). Now, there are some Stoic ways to meditate, like &lt;a href="http://newstoa.com/books/02_WILL%20POWER.pdf"&gt;Pneuma&lt;/a&gt; or &lt;a href="http://stoicscollege.com/books/08_SAM_II.pdf"&gt;Stick Action Meditation&lt;/a&gt;. But for me, mindfull Zen meditation is much more beneficial. It improves my sleep, makes my brain declutter and sort of restart. So every morning I try to sit down and focus on my breathing, for at least 5 minutes (any longer for&amp;nbsp;bonus).&lt;/p&gt;
&lt;h2 id="mindfulness"&gt;Mindfulness&lt;/h2&gt;
&lt;p&gt;Both Zen and Stoicism are about stripping down of the sense of self. Yet the differs when it comes to how to put up with full presence in the moment. While Zen is more about acceptance what&amp;#8217;s happening, Stoics try to reason with it, using their core values. It&amp;#8217;s not like you have to stop and think about it deeply, you just use what you believe in and apply it on what presents in front of you. While Stoicism is well suited for daily life, in Zen you often need zazen or even monastery isolation to fully accept&amp;nbsp;presence.&lt;/p&gt;
&lt;h2 id="minimalism"&gt;Minimalism&lt;/h2&gt;
&lt;p&gt;Minimalism might not be a core practice of Zen philosophy. It&amp;#8217;s more of the result. I, for example, don&amp;#8217;t really enjoy receiving gifts (but especially my parents seems to ignoring this). Yet my library and wardrobe grown considerably in the last few years. But it&amp;#8217;s not &lt;strong&gt;only&lt;/strong&gt; about possessions. Minimalism also applies on habits, workflow, energy management in general. Pareto principle is a great example of minimalism for work and&amp;nbsp;life.&lt;/p&gt;
&lt;p&gt;Those are three Zen concepts that I&amp;#8217;m using in daily Stoic life. I&amp;#8217;m on the long path to be a better man (and stoic). Meditation, mindfulness and minimalism are helping me in this journey. If there&amp;#8217;s anything you want to add or just correct me, hit the comments&amp;nbsp;section.&lt;/p&gt;</summary><category term="philosophy"></category></entry><entry><title>Dokku on Debian: Tips &amp; Tricks</title><link href="https://sputnikus.github.io/dokku_debian" rel="alternate"></link><updated>2014-05-29T00:00:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2014-05-29:dokku_debian</id><summary type="html">&lt;p&gt;As you might know, &lt;a href="https://github.com/progrium/dokku"&gt;Dokku&lt;/a&gt; officially supports Ubuntu (14.04 x64 or 12.04 x64). But Ubuntu (at least on server) is just Debian, so there&amp;#8217;s no reason, why it should not work, right? Wrong - but I&amp;#8217;m gonna show you problems and possible solution, that I&amp;#8217;ve&amp;nbsp;used.&lt;/p&gt;
&lt;h2 id="dokku-installation"&gt;Dokku&amp;nbsp;installation&lt;/h2&gt;
&lt;p&gt;First problem you encounter during execution of bootstrap script. It uses &lt;code&gt;add-apt-repository&lt;/code&gt; helper, which is custom Ubuntu command. Workaround is pretty easy, but a little bit messy - you just get your own helper&amp;nbsp;script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;# wget http://blog.anantshri.info/content/uploads/2010/09/add-apt-repository.sh.txt&lt;/span&gt;
&lt;span class="go"&gt;# cp add-apt-repository.sh.txt /usr/sbin/add-apt-repository&lt;/span&gt;
&lt;span class="go"&gt;# chmod o+x /usr/sbin/add-apt-repository&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now just execute bootstrap again and all should be fine.&amp;nbsp;Right?&lt;/p&gt;
&lt;h2 id="sshcommand"&gt;sshcommand&lt;/h2&gt;
&lt;p&gt;Dokku is using &lt;a href="https://github.com/progrium/sshcommand"&gt;sshcommand&lt;/a&gt; to propagate itself through &lt;code&gt;ssh&lt;/code&gt;. This is really neat, because during bootstrap &lt;em&gt;dokku&lt;/em&gt; user is created to execute commands remotely. There&amp;#8217;s only a tiny little problem. This user is passwordless and works only on key basis. Which is cool if you are on Ubuntu, because such user is fully operational. Debian on the other hand just &lt;strong&gt;locks it&lt;/strong&gt;. Without password you are screwed even if you disable password auth through &lt;em&gt;secure shell&lt;/em&gt;. Solution? Just add some random password to &lt;em&gt;dokku&lt;/em&gt; user (I&amp;#8217;ve generated it using &lt;a href="http://www.passwordstore.org/"&gt;pass&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;local&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;pass&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt; &lt;span class="nx"&gt;citra&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;dokku&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;usermod&lt;/span&gt; &lt;span class="na"&gt;-p&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;new_password&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class="nx"&gt;dokku&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;passwd&lt;/span&gt; &lt;span class="na"&gt;-u&lt;/span&gt; &lt;span class="nx"&gt;dokku&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="acl-add"&gt;acl-add&lt;/h2&gt;
&lt;p&gt;Adding you public key to &lt;em&gt;dokku&lt;/em&gt; control keys is also kinda tricky. Standard command from project &lt;span class="caps"&gt;README&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;.ssh&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;id_rsa.pub&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;ssh&lt;/span&gt; &lt;span class="nx"&gt;progriumapp.com&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sudo sshcommand acl-add dokku &amp;lt;alias&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;does not work, because (at least in my case), sudo considered parts of my key my passwords (if you are a badass with passwordless sudo, you are going to be fine). So I just executed it on the&amp;nbsp;server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;sshcommand&lt;/span&gt; &lt;span class="nx"&gt;acl&lt;/span&gt;&lt;span class="na"&gt;-add&lt;/span&gt; &lt;span class="nx"&gt;dokku&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;paste&lt;/span&gt; &lt;span class="nb"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)^&lt;/span&gt;&lt;span class="nb"&gt;D&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="deploy"&gt;Deploy&lt;/h2&gt;
&lt;p&gt;Now you should be able to just deploy and use dokku@your_server shell according to &lt;span class="caps"&gt;README&lt;/span&gt;. I&amp;#8217;m considering writing a follow-up about some &lt;a href="https://github.com/progrium/dokku/wiki/Plugins"&gt;plugins&lt;/a&gt; and how to get them working without Ubuntu underneath. Have you encountered any other issues with Dokku on Debian? Please, share it in&amp;nbsp;comments.  &lt;/p&gt;</summary><category term="devops"></category></entry><entry><title>Jumping into running project</title><link href="https://sputnikus.github.io/running_projects" rel="alternate"></link><updated>2013-08-19T16:15:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2013-08-19:running_projects</id><summary type="html">&lt;p&gt;Recently I&amp;#8217;ve landed a new job in a company with some projects in very advanced state of developement. They gave me time to became familiar with the source code, server layout, operation side of project. I&amp;#8217;ve made a terrible mistake - I was reading the code instead of doing something with&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s almost impossible to learn how to program by only reading the book. It&amp;#8217;s same with the software projects - you have to learn about it by doing it. By tinkering with the codebase, you&amp;#8217;ll get better orientation in it, seeing all the connections between components. By running release on some testing/staging server, you&amp;#8217;ll go through all the steps necessary to deploy&amp;nbsp;application.&lt;/p&gt;
&lt;p&gt;That said, it&amp;#8217;s better to start your work on project not by immersing yourself into reading the source code, but by picking up on some issue from GitHub/Trello/etc. and working on it. Very specialized task? Doesn&amp;#8217;t matter, at least you are producing something. Slow progress? Well, still better than reading your eyes off and then spend the same time fixing it. Because you are still mostly paid for editing project, not reading&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;So next time you hear somebody telling you: &amp;#8220;We&amp;#8217;re gonna give you time, just go through the source code and then give us some time estimations on tasks X, Y, Z.&amp;#8221;, just answer with: &amp;#8220;I&amp;#8217;m going to work on&amp;nbsp;Z&amp;#8221;.&lt;/p&gt;</summary><category term="programming"></category></entry><entry><title>Initial Commit</title><link href="https://sputnikus.github.io/initial_commit" rel="alternate"></link><updated>2013-07-15T14:11:00+02:00</updated><author><name>Martin Putniorz</name></author><id>tag:https://sputnikus.github.io,2013-07-15:initial_commit</id><summary type="html">&lt;p&gt;What do you say in your first post on new blog? Frankly, I don&amp;#8217;t know. With this I&amp;#8217;m forcing myself a little bit into writing habit. I made couple of short posts, now sitting in my Dropbox, but I want to push this forward, become more&amp;nbsp;consistent.&lt;/p&gt;
&lt;p&gt;Don&amp;#8217;t expect me to pull &lt;a href="http://paulgraham.com/" title="Paul Graham's blog"&gt;&lt;span class="caps"&gt;PG&lt;/span&gt;&lt;/a&gt;-style essays right from the start. Those articles are legendary and if I can make something like that from time to time, I&amp;#8217;ll be&amp;nbsp;happy.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Testing gif" src="http://assets.sbnation.com/assets/1349764/Happy_gif.gif" title="Does this even gif?" /&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m interested to write about hacking some stuff (mostly software), my thoughs, geek stuff in general and a lots of other things (see &lt;a href="https://sputnikus.github.io/pages/about"&gt;info&lt;/a&gt; about what I like). I also want to use this opportunity to sharpen my language skills, so feel free to punish my mistakes in comments (also, let&amp;#8217;s see if comments&amp;nbsp;works).&lt;/p&gt;
&lt;p&gt;This template will be under heavy development and you can write your opinions about it to &lt;a href="https://sputnikus.github.io/pages/contact-me"&gt;me&lt;/a&gt; or file an &lt;a href="https://github.com/sputnikus/bysputnikus-pelican-theme/issues"&gt;issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it for now, I think. I&amp;#8217;ll be aiming for at least two posts per week (but when there&amp;#8217;s&amp;nbsp;nothing&amp;#8230;).&lt;/p&gt;</summary><category term="writing"></category><category term="misc"></category></entry></feed>